-- File generated by the BNF Converter (bnfc 2.9.5).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language Lambda.

module Lambda.Abs where

import Prelude (String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Term
    = Variable Var
    | Application Term Term
    | Abstraction Var Type Term
    | Fst Term
    | Snd Term
    | Inl Term Type
    | Inr Term Type
    | Case Term Term Term
    | Abort Type Term
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Type
    = A
    | B
    | C
    | T
    | E
    | Bot
    | Func Type Type
    | Sum Type Type
    | Product Type Type
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype Var = Var String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

